// TODO: 

Есть пример реализации градиентного спуска. Необходимо проверить:

    1) Правильность самой функции !
    2) Правильность learning_rate
    3) Знаменатель градиентна
    4) Корректность входных данных (data_set, размерность параметров отн друг друга)
    5) Учесть возможный факт большого разброса фокусов в списке расчёта т.к у меня параксиальный случай
        т.е нужны лучи,у которых угол м/у преломлением и оптической осью будет менее 5 градусов
    6) Поменял значения: focus_0 > distance и отриц значения пропали
    7) Также поменял элемент в матрице переноса вместо 0 поставил -факт

































// FIXME: Исправить показатель преломления - это не для каждой линзы.
          // Это показатель преломления среды, а не линзы.
          // Поэтому его кол-во столько, сколько и d_i!

// BUG: 

// HACK: 

// XXX: 

//    

/* Что нужно реализовать:

    Дана системе из n-гармонических линз (Лизны могут быть только гармониескими).
    1) У каждой системы есть свои параметры такие как:
        1.1) Число гармонических линз в системе.
        1.2) Нижняя граница длины волны падающего излучения.
        1.3) Верхняя граница длины волны падающего излучения.
        1.4) Показатель преломления среды, в которой распрастраняется свет.
        1.5) Расстояния между линзами.
    
        У каждой линзы есть свои параметры такие как:
            1.1.1) Базовая длина волны lambda_0, под которую она изготовлена.
            1.1.2) Базвовый фокус f_0

    // TODO: Необходимо реализовать алгоритм оптимизации, при котором 
             будет найдено наименьший фокальный отрезок из всех возможных.
             !!!Для начала можно сделать такой алгоритм для такого параметра как высота гарм.линзы.

    // TODO: Изобразить градиентный рисунок, где каждый цвет имеет своё значение.
            
    // Возможно в в OneDimension нужно искать минимум среди 
        других начальных приближений и сравнивать эти результаты? 

*/